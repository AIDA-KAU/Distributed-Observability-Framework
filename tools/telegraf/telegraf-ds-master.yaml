apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-master
  namespace: measurement
  labels:
    k8s-app: telegraf
data:
 telegraf.conf: |+
   [agent]
     interval= "10s"
     round_interval= true
     metric_batch_size= 1000
     metric_buffer_limit= 10000
     collection_jitter= "0s"
     flush_interval= "10s"
     flush_jitter= "0s"
     precision= ""
     debug= false
     quiet= false
     logfile= ""
     hostname= "$HOSTNAME"
     omit_hostname= false

   [[outputs.kafka]]
     brokers = ["bitnami-kafka-0.bitnami-kafka-headless.observability.svc.cluster.local:9092"]
     topic = "telegraf"
     [outputs.kafka.topic_suffix]
       method = "measurement"
       separator = "_"

   [[outputs.prometheus_client]]
         ## Address to listen on.
         listen = ":9126"
         collectors_exclude = ["gocollector", "process"]

   [[inputs.cpu]]
     percpu = true
     totalcpu = true
     collect_cpu_time = false
     report_active = false
       fieldpass = ["usage_user", "usage_system", "usage_idle", "usage_active", "usage_nice", "usage_iowait", "usage_irq", "usage_softirq", "usage_steal", "usage_guest", "usage_guest_nice"]
   [[inputs.disk]]
     ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs", "loop*"]
     fieldpass = ["free", "used", "total", "used_percent"]
   [[inputs.diskio]]
     devices = ["sda", "sdb", "sdc", "nvme0n1p3"]
     fieldpass = ["read_time", "write_time", "reads", "writes", "io_time"]
   [[inputs.mem]]
     fieldpass = ["available", "free", "total", "used_percent"]
   [[inputs.net]]
     interfaces= ["eth*", "ens*"]
     ignore_protocol_stats= true
   [[inputs.system]]
     fieldpass = ["load1", "load5", "load15"]
   [[inputs.temp]]
   [[inputs.intel_powerstat]]
     package_metrics = ["current_power_consumption", "current_dram_power_consumption", "thermal_design_power"]
     cpu_metrics = ["cpu_frequency", "cpu_temperature"]
   [[inputs.kube_inventory]]
     interval = "60s"
     url = "https://$HOSTIP:6443"
     bearer_token_string = "$TELEGRAF_TOKEN"
     resource_include = [ "pods", "deployments", "daemonsets", "services", "statefulsets" ]
     namespace = ""
     insecure_skip_verify = true
    [[inputs.kubernetes]]
      url = "https://$HOSTIP:10250"
      bearer_token_string = "$TELEGRAF_TOKEN"
      insecure_skip_verify = true
      namepass = ["kubernetes_pod_container", "kubernetes_pod_volume", "kubernetes_pod_network"]

---
# Section: Daemonset
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: telegraf-master
  namespace: measurement
  labels:
    k8s-app: telegraf
spec:
  selector:
    matchLabels:
      name: telegraf
  template:
    metadata:
      labels:
        name: telegraf
    spec:
      tolerations:
      - operator: "Exists"
      nodeSelector:
        kubernetes.io/hostname: master
      containers:
      - name: telegraf
        image: telegraf:latest
        #args:
        #  - "--user telegraf:$(stat -c '%g' /var/run/docker.sock)"
        resources:
          limits:
            cpu: 100m
            memory: 60Mi
          requests:
            cpu: 25m
            memory: 25Mi
        env:
        - name: HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: "HOST_PROC"
          value: "/rootfs/proc"
        - name: "HOST_SYS"
          value: "/rootfs/sys"
        - name: "TELEGRAF_TOKEN"
          valueFrom:
            secretKeyRef:
              name: telegraf-measurement-secret
              key: token
        volumeMounts:
        - name: sys
          mountPath: /rootfs/sys
          readOnly: true
        - name: proc
          mountPath: /rootfs/proc
          readOnly: true
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: utmp
          mountPath: /var/run/utmp
          readOnly: true
        - name: config
          mountPath: /etc/telegraf
      terminationGracePeriodSeconds: 10
      volumes:
      - name: sys
        hostPath:
          path: /sys
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: proc
        hostPath:
          path: /proc
      - name: utmp
        hostPath:
          path: /var/run/utmp
      - name: config
        configMap:
          name: telegraf-master