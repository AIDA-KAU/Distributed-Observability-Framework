apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf
  namespace: measurement
  labels:
    k8s-app: telegraf
data:
 telegraf.conf: |+
   [agent]
     interval= "5s"
     round_interval= true
     metric_batch_size= 1000
     metric_buffer_limit= 10000
     collection_jitter= "0s"
     flush_interval= "10s"
     flush_jitter= "0s"
     precision= ""
     debug= false
     quiet= false
     logfile= ""
     hostname= "$HOSTNAME"
     omit_hostname= false

   [[outputs.kafka]]
     brokers = ["bitnami-kafka-0.bitnami-kafka-headless.monitoring.svc.cluster.local:9092"]
     topic = "telegraf"
     [outputs.kafka.topic_suffix]
       method = "measurement"
       separator = "_"

   [[outputs.prometheus_client]]
         ## Address to listen on.
         listen = ":9126"

   [[inputs.cpu]]
     percpu = true
     totalcpu = true
     collect_cpu_time = false
     report_active = false
   [[inputs.disk]]
     ignore_fs = ["tmpfs", "devtmpfs", "devfs"]
   [[inputs.diskio]]
   [[inputs.kernel]]
   [[inputs.mem]]
   [[inputs.net]]
     interfaces= ["eth*", "ens*"]
     ignore_protocol_stats= true
   [[inputs.processes]]
   [[inputs.swap]]
   [[inputs.system]]
   [[inputs.docker]]
     endpoint = "unix:///var/run/docker.sock"
     perdevice = true
     total = true
     perdevice_include = ["cpu", "blkio", "network"]
     total_include = ["cpu", "blkio", "network"]
   [[inputs.kubernetes]]
     url = "https://$HOSTIP:10250"
     bearer_token_string = "eyJhbGciOiJSUzI1NiIsImtpZCI6IkhmX1NLNXRTbnBOdThoMm5KbHl1V3JHSHRYazRaLWI5anMwTjg5bjduTHcifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtZWFzdXJlbWVudCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJ0ZWxlZ3JhZi10b2tlbi04aHc1YiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJ0ZWxlZ3JhZiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYxZmQwOWFlLTZmOTEtNGFkNi05YTYwLWQyMGExNjlmYmQyMyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptZWFzdXJlbWVudDp0ZWxlZ3JhZiJ9.h8dzVvvyGD_NLLfg2co7Or1NWBzUL68FX7yrLkzH9Iho1XkcLhnkRkerfhUmPGL0hycOj9M5RId4FTpfPNVobVgOTB6ulTCi_G2sDqP8IDdJWk8RfNpwMr_NSmqCqrc379WlcL3Lki2gh1b3dFv8vQeelV9YQhEjBf7jn41HOj51exeHs7DNvBZDoOIGF0dXJfTV20CrT-Tf5meqCY53LhWrqANLRIKVj2C4n0NWLAndrKALPhkEYRlZkpNoxsgo-zMYxXay1ac9oW_CeJRUICHjbwpwFkFV08NKhEUei3HkN8nSu0Ri5Mn8K3Zi1AtaaYrwawJlKLSkMdWHMrpbUg"
     insecure_skip_verify = true

---
# Section: Daemonset
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: telegraf
  namespace: measurement
  labels:
    k8s-app: telegraf
spec:
  selector:
    matchLabels:
      name: telegraf
  template:
    metadata:
      labels:
        name: telegraf
    spec:
      containers:
      - name: telegraf
        image: telegraf:1.20.4
        #args:
        #  - "--user telegraf:$(stat -c '%g' /var/run/docker.sock)"
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
        env:
        - name: HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: "HOST_PROC"
          value: "/rootfs/proc"
        - name: "HOST_SYS"
          value: "/rootfs/sys"
#        - name: ENV
#          valueFrom:
#            secretKeyRef:
#              name: default
#              key: default-token-tf6nh
        volumeMounts:
        - name: sys
          mountPath: /rootfs/sys
          readOnly: true
        - name: proc
          mountPath: /rootfs/proc
          readOnly: true
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: utmp
          mountPath: /var/run/utmp
          readOnly: true
        - name: config
          mountPath: /etc/telegraf
      terminationGracePeriodSeconds: 10
      volumes:
      - name: sys
        hostPath:
          path: /sys
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: proc
        hostPath:
          path: /proc
      - name: utmp
        hostPath:
          path: /var/run/utmp
      - name: config
        configMap:
          name: telegraf