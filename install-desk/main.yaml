---
- hosts: master
  become: yes
  gather_facts: true
  tasks:
    - name: Add Helm apt-key
      apt_key:
        url: https://baltocdn.com/helm/signing.asc
        state: present

    - name: Add Helm apt repository
      apt_repository:
        repo: deb https://baltocdn.com/helm/stable/debian/ all main
        state: present
        filename: 'helm-stable-debian.list'

    - name: Install required packages
      ansible.builtin.package:
        name:
          - apt-transport-https
          - python3-pip
          - helm
        state: latest

- hosts: observability1
  become: yes
  gather_facts: true
  tasks:
    - name: Create required directories for persistent volumes
      file:
        path: "{{ item }}"
        state: directory
        owner: aida
        group: aida
        mode: 0755
      with_items:
        - /opt/elasticsearch
        - /opt/kafka
        - /opt/grafana
        - /opt/loki
        - /opt/prometheus

#    - name: Install kubernetes apply pre-requisites
#      pip:
#        name:
#          - pyyaml
#          - kubernetes

- hosts: master
  gather_facts: true
  tasks:
    - name: Create kubernetes namespaces
      kubernetes.core.k8s:
        kubeconfig: /home/aida/.kube/config
        state: present
        src: "{{ playbook_dir }}/../namespaces/create-namespaces.yaml"

    - name: Create kubernetes persistent volumes
      kubernetes.core.k8s:
        kubeconfig: /home/aida/.kube/config
        state: present
        src: "{{ playbook_dir }}/../persistent-volumes/create-persistent-volume.yaml"

    - name: Add Zookeeper and Kafka Helm repo
      kubernetes.core.helm_repository:
        name: bitnami
        repo_url: "https://charts.bitnami.com/bitnami"

    - name: Install Zookeeper and Kafka using Helm
      kubernetes.core.helm:
        kubeconfig: /home/aida/.kube/config
        name: bitnami
        chart_ref: bitnami/kafka
        release_namespace: observability
        values_files:
          - "{{ playbook_dir }}/../helm-configs/kafka-values.yaml"

    - name: Install Rabbitmq using Helm
      kubernetes.core.helm:
        kubeconfig: /home/aida/.kube/config
        name: bitnami
        chart_ref: bitnami/rabbitmq
        release_namespace: measurement
        values_files:
          - "{{ playbook_dir }}/../helm-configs/rabbitmq-values.yaml"

    - name: Add Elasticsearch Helm repo
      kubernetes.core.helm_repository:
        name: elastic
        repo_url: "https://helm.elastic.co"

    - name: Install Elasticsearch using Helm
      kubernetes.core.helm:
        kubeconfig: /home/aida/.kube/config
        name: elasticsearch
        chart_ref: elastic/elasticsearch
        release_namespace: observability
        values_files:
          - "{{ playbook_dir }}/../helm-configs/elasticsearch-values.yaml"

    - name: Wait for Pods to start
      ansible.builtin.shell: sleep 60

    - name: Add Prometheus Helm repo
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"

    - name: Install Prometheus using Helm
      kubernetes.core.helm:
        kubeconfig: /home/aida/.kube/config
        name: prometheus
        chart_ref: prometheus-community/prometheus
        release_namespace: observability
        values_files:
          - "{{ playbook_dir }}/../helm-configs/prometheus-values.yaml"

    - name: Add Grafana Helm repo
      kubernetes.core.helm_repository:
        name: grafana
        repo_url: "https://grafana.github.io/helm-charts"

    - name: Install Loki using Helm
      kubernetes.core.helm:
        kubeconfig: /home/aida/.kube/config
        name: loki
        chart_ref: grafana/loki
        chart_version: 2.16.0
        release_namespace: observability
        values_files:
          - "{{ playbook_dir }}/../helm-configs/loki-values.yaml"

    #- name: Install Loki using Helm
    #  ansible.builtin.shell: helm upgrade --install loki -n=observability -f "{{ playbook_dir }}/../helm-configs/loki-values.yaml" --version 2.16.0 grafana/loki

    #    - name: Install Tempo using Helm
    #      kubernetes.core.helm:
    #        kubeconfig: /home/aida/.kube/config
    #        name: tempo
    #        chart_ref: grafana/tempo
    #        release_namespace: observability
    #        values_files:
    #          - "{{ playbook_dir }}/../helm-configs/tempo-values.yaml"

    - name: Install Grafana using Helm
      kubernetes.core.helm:
        kubeconfig: /home/aida/.kube/config
        name: grafana
        chart_ref: grafana/grafana
        release_namespace: observability
        values_files:
          - "{{ playbook_dir }}/../helm-configs/grafana-values.yaml"

    - name: Install Promtail using Helm
      kubernetes.core.helm:
        kubeconfig: /home/aida/.kube/config
        name: promtail
        chart_ref: grafana/promtail
        release_namespace: measurement
        values_files:
          - "{{ playbook_dir }}/../helm-configs/promtail-values.yaml"

    #- name: Install Promtail using Helm
    #  ansible.builtin.shell: helm upgrade --install promtail -n=measurement -f /home/aida/AIDA-Distributed-Observability-Framework/helm-configs/promtail-values.yaml grafana/promtail

    #    - name: Deploy Telegraf Agent
    #      kubernetes.core.k8s:
    #        kubeconfig: /home/aida/.kube/config
    #        state: present
    #        definition: "{{ lookup('template', '{{ item }}') | from_yaml }}"
    #      with_fileglob:
    #        - "/home/aida/AIDA-Distributed-Observability-Framework/tools/telegraf/telegraf-serviceaccount.yaml"
    #        - "/home/aida/AIDA-Distributed-Observability-Framework/tools/telegraf/telegraf-ds-worker.yaml"
    #        - "/home/aida/AIDA-Distributed-Observability-Framework/tools/telegraf/telegraf-ds-master.yaml"
    #        #src: /home/aida/AIDA-Distributed-Observability-Framework/tools/telegraf/telegraf-serviceaccount.yaml

    - name: Wait for Pods to start
      ansible.builtin.shell: sleep 60

    - name: Create Telegraf Service
      kubernetes.core.k8s:
        kubeconfig: /home/aida/.kube/config
        state: present
        src: "{{ playbook_dir }}/../tools/telegraf/telegraf-serviceaccount.yaml"

    - name: Deploy Telegraf Agent on Workers Node
      kubernetes.core.k8s:
        kubeconfig: /home/aida/.kube/config
        state: present
        src: "{{ playbook_dir }}/../tools/telegraf/telegraf-ds-worker.yaml"

    - name: Deploy Telegraf Agent on Master Node
      kubernetes.core.k8s:
        kubeconfig: /home/aida/.kube/config
        state: present
        src: "{{ playbook_dir }}/../tools/telegraf/telegraf-ds-master.yaml"

    - name: Deploy Kafka consumers
      kubernetes.core.k8s:
        kubeconfig: /home/aida/.kube/config
        state: present
        src: "{{ playbook_dir }}/../tools/kafka-consumers/kc-nm-deployment.yaml"

    - name: Add Jaeger Helm repo
      kubernetes.core.helm_repository:
        name: jaegertracing
        repo_url: "https://jaegertracing.github.io/helm-charts"

    - name: Install Jaeger using Helm
      kubernetes.core.helm:
        kubeconfig: /home/aida/.kube/config
        name: jaeger
        chart_ref: jaegertracing/jaeger
        release_namespace: observability
        values_files:
          - "{{ playbook_dir }}/../helm-configs/jaeger-values.yaml"
